<?xml version="1.0" encoding="UTF-8"?>
<?asciidoc-toc?>
<?asciidoc-numbered?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title>Person-service Getting Started Guide</title>
<date></date>
<author>
<personname>
<firstname>Jane</firstname>
<surname>Doe</surname>
</personname>
</author>
<authorinitials>JD</authorinitials>
<revhistory>
<revision>
<date></date>
<authorinitials>JD</authorinitials>
<revremark>doctype: book</revremark>
</revision>
</revhistory>
</info>
<literallayout class="monospaced">:icons: font
:source-highlighter: highlightjs
:toc: left
:toclevels: 4
:sectlinks:</literallayout>
<literallayout class="monospaced">[introduction]
= Introduction</literallayout>
<literallayout class="monospaced">Person-service is a RESTful microservice for ...</literallayout>
<literallayout class="monospaced">[[overview]]
= Overview</literallayout>
<literallayout class="monospaced">[[overview-http-verbs]]
== HTTP verbs
Person-service tries to adhere as closely as possible to standard HTTP and REST conventions in its
use of HTTP verbs.
|===
| Verb | Usage</literallayout>
<literallayout class="monospaced">| `GET`
| Used to retrieve a resource</literallayout>
<literallayout class="monospaced">| `POST`
| Used to create a new resource</literallayout>
<literallayout class="monospaced">| `PATCH`
| Used to update an existing resource, including partial updates</literallayout>
<literallayout class="monospaced">| `PUT`
| Used to update an existing resource, full updates only</literallayout>
<literallayout class="monospaced">| `DELETE`
| Used to delete an existing resource
|===</literallayout>
<literallayout class="monospaced">[[overview-http-status-codes]]
== HTTP status codes
Person-service tries to adhere as closely as possible to standard HTTP and REST conventions in its
use of HTTP status codes.</literallayout>
<literallayout class="monospaced">|===
| Status code | Usage</literallayout>
<literallayout class="monospaced">| `200 OK`
| Standard response for successful HTTP requests.
| The actual response will depend on the request method used.
| In a GET request, the response will contain an entity corresponding to the requested resource.
| In a POST request, the response will contain an entity describing or containing the result of the action.</literallayout>
<literallayout class="monospaced">| `201 Created`
| The request has been fulfilled and resulted in a new resource being created.</literallayout>
<literallayout class="monospaced">| `204 No Content`
| The server successfully processed the request, but is not returning any content.</literallayout>
<literallayout class="monospaced">| `400 Bad Request`
| The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).</literallayout>
<literallayout class="monospaced">| `404 Not Found`
| The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible.
|===</literallayout>
<literallayout class="monospaced">[[resources]]
= Resources</literallayout>
<literallayout class="monospaced">[[resources-person]]
== Person
The Person resource is used to create, modify and list people.</literallayout>
</article>